[![view on npm](https://img.shields.io/npm/v/worker-nodes.svg)](https://www.npmjs.org/package/worker-nodes)
[![Build Status](https://travis-ci.org/allegro/node-worker-nodes.svg?branch=master)](https://travis-ci.org/allegro/node-worker-nodes)

# worker-nodes

  A node.js library to run cpu-intensive tasks in a separate processes and to not to block the event loop.


## Installation

```bash
$ npm install worker-nodes
```

  Node.js greater than 11.7.0 is *required*

# API Reference

{{#class name="WorkerNodes"}}
{{>docs}}
{{/class}}

{{#class name="WorkerNodesOptions"}}
{{>docs}}
{{/class}}

## Example

Given `/home/joe.doe/workspace/my-module.js`:
```javascript
module.exports = function myTask() {
    return 'hello from separate process!';
};
```

you can run it through the worker nodes as follows:
```javascript
const WorkerNodes = require('worker-nodes');
const myModuleWorkerNodes = new WorkerNodes('/home/joe.doe/workspace/my-module');

myModuleWorkerNodes.call().then(msg => console.log(msg));  // -> 'hello from separate process!'
```

For more advanced examples please refer to [the test cases](https://github.com/allegro/node-worker-nodes/tree/master/e2e).


## Running tests

Check out the library code and then:

```bash
$ npm install
$ npm test
```

## Benchmarks

To run tests, type:

```bash
$ npm install
$ npm run benchmark
```

It will run a performance test against the selected libraries:
- data in: an object that consists of a single field that is a 0.5MB random string
- data out: received object stringified and concatenated with another 1MB string

Example results:
```bash
results for 100 executions

name                time: total [ms]  time usr [ms]  time sys [ms]  worker usr [ms]  worker sys [ms]  mem rss [MB]  worker rss [MB]  errors
------------------  ----------------  -------------  -------------  ---------------  ---------------  ------------  ---------------  ------
no-workers                       148            203             37                0                0            98                0       0
worker-nodes@2.0.0               362            390            143              389              143           213              210       0
workerpool@6.0.0                 367            495            185              492              182           236              245       0
worker-nodes@1.6.1              1095            520            207              592              243           216               86       0
worker-farm@1.7.0               1886            749            276              947              299           221               70       0
process-pool@0.3.5              2002            847            285              986              309           219               74       0
worker-pool@3.0.2              13775           7129           5236             1891              952           363               63       0

  os : Darwin / 19.5.0 / x64
 cpu : Intel(R) Core(TM) i7-7660U CPU @ 2.50GHz Ã— 4
node : 14.3.0 / v8: 8.1.307.31-node.33
```

## See also

sources of inspiration:
* [Worker Farm](https://github.com/rvagg/node-worker-farm)
* [workerpool](https://github.com/josdejong/workerpool)
* [process-pool](https://github.com/ohjames/process-pool)
* [node-worker-pool](https://github.com/jeffmo/node-worker-pool)

## License

Copyright Allegro Sp. z o.o.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.